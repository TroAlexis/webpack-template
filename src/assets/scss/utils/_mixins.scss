// map-deep-get($o-grid-default-config, "layouts", "M");

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}


// px to rem
@function rem($pixels, $context: $font-size--main) {
	@if (unitless($pixels)) {
		$pixels: $pixels * 1px;
	}
	@if (unitless($context)) {
		$context: $context * 1px;
	}
	@return $pixels / $context * 1rem;
}

@function em($pixels, $context: $font-size--main) {
	@if (unitless($pixels)) {
		$pixels: $pixels * 1px;
	}
	@if (unitless($context)) {
		$context: $context * 1px;
	}
	@return $pixels / $context * 1em;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: rem($min-font-size);
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{rem($min-font-size)} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: rem($max-font-size);
      }
    }
  }
}

// SET SIZE
@mixin size($width,$height: $width) {
	width: $width;
	height: $height;
}
// CENTER A BLOCK ELEMENT
@mixin push--auto {
	margin: {
		right: auto;
		left: auto;
	}
}
// Pseudo element setting mixin
@mixin pseudo($display: block, $pos: absolute, $content: '') {
	position: $pos;

	display: $display;

	content: $content;
}

// MEDIA QUERIES MIXINS
@mixin mq($width, $type: min) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
		@if $type == max {
			$width: $width - 1px;
		}
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
	@else {
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}
